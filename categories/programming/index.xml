<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>programming - Category - Sidharth Arya</title>
        <link>https://sidhartharya.github.io/categories/programming/</link>
        <description>programming - Category - Sidharth Arya</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>sidhartharya10@gmail.com (Sidharth Arya)</managingEditor>
            <webMaster>sidhartharya10@gmail.com (Sidharth Arya)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 01 Jul 2021 00:00:00 &#43;0530</lastBuildDate><atom:link href="https://sidhartharya.github.io/categories/programming/" rel="self" type="application/rss+xml" /><item>
    <title>Running ipython inside a python script</title>
    <link>https://sidhartharya.github.io/running-ipython-inside-a-python-script/</link>
    <pubDate>Thu, 03 Jun 2021 00:00:00 &#43;0530</pubDate>
    <author>Author</author>
    <guid>https://sidhartharya.github.io/running-ipython-inside-a-python-script/</guid>
    <description><![CDATA[Imagine you are writing a very convoluted program with all sorts of threading magic. You want to continuously test various sections of your program before moving on with the next task. Would you rather write all the functions in the file at the same time and start debugging the code for errors, or would you rather fire up an ipython shell with your program loaded up and available to you?]]></description>
</item><item>
    <title>A quicker way to reach localhost with qutebrowser</title>
    <link>https://sidhartharya.github.io/a-quicker-way-to-reach-localhost-with-qutebrowser/</link>
    <pubDate>Fri, 04 Jun 2021 00:00:00 &#43;0530</pubDate>
    <author>Author</author>
    <guid>https://sidhartharya.github.io/a-quicker-way-to-reach-localhost-with-qutebrowser/</guid>
    <description><![CDATA[Qutebrowser Qutebrowser is the best web browser for developers, hands down. Nothing can compare to the flexibility it offers. Now, ofcourse other web browser must have ways of enabling and disabling various fancy features, but it&rsquo;s much harder to achieve.
I have a number of scripts that i use on a daily basis in qutebrowser which i maintain here (SidharthArya/.qutebrowser ) on a daily basis.
The Problem One of the issues i have sometimes is to reach localhost on various ports quickly.]]></description>
</item><item>
    <title>Using pass to auto authenticate for github</title>
    <link>https://sidhartharya.github.io/using-pass-to-auto-authenticate-for-github/</link>
    <pubDate>Sat, 12 Jun 2021 00:00:00 &#43;0530</pubDate>
    <author>Author</author>
    <guid>https://sidhartharya.github.io/using-pass-to-auto-authenticate-for-github/</guid>
    <description><![CDATA[People often use SSH to avoid entering their username and password while pushing commits to github or gitlab. I like to use this excellent unix password utility called Pass .
Why use pass instead of SSH  Anyone who can gain access to your computer (physical, or through some form of hacking) can push changes to your github. the gpg-agent locks itself after some time has elapsed You can kill the gpg-agent when you are not not using the machine Github recommends using personal access tokens  A disadvantage though is, you will have to enter your password store password from time to time.]]></description>
</item><item>
    <title>Integrating Org Protocol with Qutebrowser</title>
    <link>https://sidhartharya.github.io/integrating-org-protocol-with-qutebrowser/</link>
    <pubDate>Mon, 14 Jun 2021 00:00:00 &#43;0530</pubDate>
    <author>Author</author>
    <guid>https://sidhartharya.github.io/integrating-org-protocol-with-qutebrowser/</guid>
    <description><![CDATA[I don&rsquo;t have a good introduction today. So let&rsquo;s just get to the post.
Org mode provides something called org protocol in order to let other applications be able to pass their data into the emacs server instance. We exploit this feature of emacs to write a little script which can capture stuff in org mode and store links from the browser.
Org Protocol &ldquo;org-protocol intercepts calls from emacsclient to trigger custom actions without external dependencies.]]></description>
</item><item>
    <title>Automatically fetching newly added feeds in elfeed org file</title>
    <link>https://sidhartharya.github.io/automatically-fetching-newly-added-feeds-in-elfeed-org-file/</link>
    <pubDate>Thu, 01 Jul 2021 00:00:00 &#43;0530</pubDate>
    <author>Author</author>
    <guid>https://sidhartharya.github.io/automatically-fetching-newly-added-feeds-in-elfeed-org-file/</guid>
    <description><![CDATA[The best Rss or Atom feed reader is elfeed . There is no competition at all in comparison to it, thanks to the excellent programming done by skeeto (Christopher Wellons) . I urge my readers to go through his blog at null program . elfeed-org is a package that makes it simpler to write the list of elfeed feeds you need with tags and categories, etc in an org file.]]></description>
</item></channel>
</rss>
